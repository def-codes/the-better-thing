
/*
  Rules for supporting slide presentation based on document sections.  Note that
  scroll-snap rules were written for Firefox which supposedly supports an “older
  version of the spec”. https://caniuse.com/#feat=css-snappoints
*/
body {
  /* 
	scroll-snap-type: mandatory;
	scroll-snap-type: proximity;
	scroll-snap-points-y: repeat(100vh);
 */
}
/* 
main > header {
	height: 100vh;
}
 */

.host-output {
	position: absolute;
	top: 0.5em;
	right: 0.5em;
	bottom: 0.5em;
	overflow: auto;
	max-width: 33%;
	padding: 0.25em 0.5em;
	background: rgba(0, 0, 0, 0.1);
	box-shadow: 0 0 1.2em rgba(51, 51, 51, .5);
	z-index: 999;
}

.host-output-ports {
	position: absolute;
	top: 0.5em;
	right: 0.5em;
	bottom: 0.5em;
	overflow: auto;
	max-width: 50%;
	padding: 0.25em 0.5em;
	background: rgba(196, 196, 196, 0.66);
	box-shadow: 0 0 1.2em rgba(51, 51, 51, .5);
	z-index: 999;
}

/* main > section, main > header { */
.example, .slide {
	height: 100vh;
	scroll-snap-type: y mandatory;
	scroll-snap-align: start;
}

/** Coordinated HTML and SVG layers. */
.space > .html, .space > svg {
	position: absolute;
	left: 50%;
	top: 50%;
	width: 100%;
	height: 100%;
	user-select: none;
}
.space > svg {
	overflow: visible;
	pointer-events: none;
}
/* This is probably a bad idea as it will throw off mouse coordinates */
/* .space > .html, .space .everything { */
/*	transform: scale(1.5); */
/* } */
/* .space > .html { */
/*	transform-origin: top left; */
/* } */

/* Triple store graphs */
/* .Document .Property, */
.Space .Property {
	position: absolute;
	top: 0;
	left: 0;
	font-size: 66%;
	box-sizing: border-box;
	/* background: rgba(170, 204, 238, .5); */
	background-color: rgba(255, 128, 128, .2);
	border-radius: 0 50% 50% 0;
	transform-origin: center left;
	/* border: 1px solid black; */
	color: rgba(0, 0, 0, .5);
	text-align: center;
	overflow: hidden;
}
.node [data-property="linksTo"] {
	display: none;
}

/* Examples */
.example {
	position: relative;
	display: flex;
	padding-left: 0.5em;
}
.example > .description {
	display: flex;
	flex-direction: column;
	width: 100%;
}
.example > .description > header {
	flex: 0 0 auto;
}
.example > .description .heading {
	margin-top: 0.5em;					/* beat heading */
	margin-bottom: 0;					/* reset heading */
	font-weight: 500;
}
.example > .description .heading .example-link {
	text-decoration: none;
	color: inherit;
}
.example > .description .comment {
	margin: 0.5em 0;					/* beat p */
	font-weight: 300;
	max-width: 50%;
	z-index: 1000;
}
.example > .description > .userland-code {
	flex: 1 1 auto;
	width: 100%;
}
.example > .description > .userland-code-result {
	position: absolute;
	border: 1px solid red;
	top: 50%;
	left: 50%;
}
.example .userland-code result {
	padding: 1em;
	opacity: 0;
	transition: opacity 0.3s;
	/* Not needed right now because result itself is throttled wierdly
	transition-delay: 0.3s;
	 */
}
.example .userland-code result.okay {
	background: rgba(0, 196, 0, .3);
	transition-delay: 0s;
}
.example .userland-code result.error {
	opacity: 1;
	background: rgba(196, 0, 0, .3);
}
.example .userland-code result.error[data-when="reading-code"] {
	border: 1px solid black;
}
.example .userland-code result.error[data-when="creating-system"] {
	border: 1px solid blue;
}
.example > .representation {
	position: absolute;
	margin: 0;					/* beat figure default */
	top: 0;
	right: 0;
	bottom: 0;
	left: 50%;
}
.example > .representation .space {
	height: 100%;
}
code.userland-code-input {
	font-family: inherit;		/* reset textarea */
	display: block;				/* beat code */
	white-space: pre;			/* beat code */
}
code.userland-code-input:focus {
	outline: none;				/* reset */
}

.graph-path:nth-of-type(1) { stroke-width: 0.4em; stroke: red; }
.graph-path:nth-of-type(2) { stroke-width: 0.6em; stroke: orange; }
.graph-path:nth-of-type(3) { stroke-width: 0.8em; stroke: yellow; }
.graph-path:nth-of-type(4) { stroke-width: 1.0rem; stroke: green; }
.graph-path:nth-of-type(5) { stroke-width: 1.2em; stroke: blue; }
.graph-path:nth-of-type(6) { stroke-width: 1.4em; stroke: indigo; }
.graph-path:nth-of-type(7) { stroke-width: 1.6em; stroke: violet; }

.graph-path {
	stroke: gray;
	stroke-width: 0.5em;
	stroke-linecap: round;
	stroke-linejoin: round;
	fill: none;
	opacity: .1;
}
.graph-path.search {
	stroke: red;
	stroke-dasharray: 0.3;
}

.Space .Resource {
	position: absolute;
	/* border: 1px solid red; */
}
/* DEBUG
.Resource::before {
	position: absolute;
	content: '';
	width: 0.5em;
	height: 0.5em;
	border-radius: 50%;
	background: rgba(255, 0, 0, .5);
	transform: translate(-50%, -50%);
}
*/

.Document {
	overflow-y: auto;
}
.Document > .resource-content {
	border: 1px solid blue;
}

/* .Document .resource-content, */
.Space .resource-content {
	padding: 0.75em;
	text-align: center;
	transform: translate(-50%, -50%);
	border-radius: 50%;
	cursor: pointer;
	user-select: none;
}

.resource-content:hover {
	background: rgba(255, 255, 0, .5);
}

.graph-edge {
	stroke-width: 3;
	stroke: rgba(0, 0, 0, .25);
}
#boggle .graph-edge {
	stroke: rgba(0, 0, 0, .025);
}
/* There are way too many, and they're not readable. */
#boggle .Property {
	display: none;
}

.trie-node {
	background: #EEE;
	font-family: monospace;
	border-radius: 50%;
	padding: 0.33em;
}
.trie-node[data-is-match="yes"] {
	background-color: rgba(255, 255, 0, 0.5);
}
.trie-node[data-is-match="no"] {
	background-color: rgba(255, 0, 0, 0.5);
}
.trie-node[data-is-terminal="yes"] {
	background-color: rgba(0, 255, 0, 0.5);
}
.trie-node .token {
	
}
.trie-node .count {
	display: none;
}

.space {
	position: relative;
}
/* PROVISIONAL */
.Space.Porthole {
	overflow: hidden;
	border-radius: 50%;
	box-shadow: inset 0 0 1.5em -0.25em black;
	background: white;
}
.Person .resource-content {
  background: green;
}

.Selected .resource-content {
  background: rgba(64, 64, 196, .5);
}
[data-container] {
	border: 1px solid green;
}
