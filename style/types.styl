// Declarations only: zero emit

// `Thing` is an implicit superclass.  See `globals`

// How can you tell it's space?
Space()
  --type 'Space'
  background-color var(--space-background)

Indicator()
  font-size 100%
  // This will never show because below
  --type 'Indicator'

Indicated()
  // --saturation 100%
  --luminosity 100%
  --alpha 66%
  box-shadow 0 0 2em -0.5em

Affordance()
  Indicator()
  --type 'Affordance'
  cursor hand
  border 1em solid rgba(green, 0.2)
  box-shadow 0 0 2em -0.5em
  // Was curious... no such thing in Gecko.
  // &:active
  //   background #F00

  &:hover
    background var(--indicator-color)

Tag()
  Indicator()

// huh?
Hashtag()
  Tag()

Container()
  // container

DomContainer()
  Container()

// > Content is palpable when it's neither empty or hidden; it is content that
// > is rendered and is substantive. Elements whose model is flow content or
// > phrasing content should have at least one node which is palpable. [MDN]
PalpableContent()
  // 

PhrasingContext()
  DomContainer()
  // container for phrasing elements

PhrasingContent()
  // phrasing content

FlowContent()
  // flow content

Stricken()
  --type 'Stricken'

Inserted()
  --type 'Inserted'

Deleted()
  --type 'Deleted'

Navigable()
  cursor pointer
  Affordance()
  --type 'Navigable'
	
Section()
  --type 'Section'
	
Header()
  --type 'Header'

Quotation
  --type 'Quotation'

Citation()
  --type 'Citation'

Draggable()
  header
    Affordance()
  // indicate draggability how

Lens()
  --type 'Lens'
  // something
  box-shadow inset 0 0 2em -0.5em

Porthole()
  // ORDER! Navigable is Affordance which is Indicator, which has box-shadow.
  // box-shadow does allow multiple values, though we don't have a way (that I
  // know of) to combine them.
  // 
  // If CSS vars could refer to themselves (whatever value they would be
  // overriding), then you could compose them non-destructively, again, allowing
  // for arbitrary ordering.
  // 
  // box-shadow --var(--box-shadow), --var(--inset-box-shadow)
  //
  // Suppose `--inset-box-shadow` is not defined, is this a syntax error?
  //
  // for this particular effect it may
  Navigable()
  Lens()
  --type 'Porthole'
  width 20rem
  height 20rem
  border-radius 50%
  overflow hidden
  background #AAA

Paragraph()
  --type 'Â¶'

Output()
  --type 'Output'
  border 1em solid gray !important

Aside()
  --type 'Aside'

Collection()
  --type 'Collection'

List
  Collection()
  Sequence()
  // Type won't be seen because requires subtype.  But still
  --type 'List'

OrderedList()
  List()
  --type 'OrderedList'

Vector()
  OrderedList
  --type 'Vector'

UnorderedList()
  Collection()
  --type 'UnorderedList'
  border-bottom 1em solid orange

Item()
  --type 'Item'

KeyValueCollection()
  Collection()
  //

Dictionary()
  --type 'Dictionary'
  KeyValueCollection()

